syntax = "proto3";

package dmir;

enum NumericalFormat {
  option allow_alias = true;
  UNDEFINED = 0;
  FLOAT32 = 1;
  FLOAT = 1;
  FLOAT64 = 2;
  DOUBLE = 2;
  FLOAT16 = 3;
  HALF = 3;
  BFLOAT16 = 4;
  UINT8 = 5;
  INT8 = 6;
  INT16 = 7;
  SHORT = 7;
  INT32 = 8;
  INT = 8;
  INT64 = 9;
  LONG = 9;
  BOOL = 10;
  UINT16 = 11;
  UINT32 = 12;
  UINT64 = 13;
  BFP16_64_FD = 14;
  BFP12_128_FD = 15;
  BFP16_64_LD = 16;
  BFP12_128_LD = 17;
}

message Tensor {
  string name = 1;
  repeated uint32 shape = 2;
  NumericalFormat format = 3;
  repeated float value = 4;
  bool is_quantized = 5;
  string qscheme = 6;
  float q_scale = 7;
  int32 q_zero_point = 8;
  string device = 9; // place holder for HW model entities
}

message Attribute {
  enum AttributeKind {
    UNDEFINED = 0;
    FLOAT = 1;
    INT = 2;
    STRING = 3;
    TENSOR = 4;
    GRAPH = 5;
    FLOATS = 6;
    INTS = 7;
    STRINGS = 8;
    TENSORS = 9;
    GRAPHS = 10;
  }
  AttributeKind kind = 1;
  string name = 2;
  float float_value = 3;
  int64 integer_value = 4;
  string string_value = 5;
  string tensor_name = 6;
  string graph_name = 7;
  repeated float float_values = 8;
  repeated int64 integer_values = 9;
  repeated string string_values = 10;
  repeated string tensor_names = 11;
  repeated string graph_names = 12;
}

message Dependency {
  string operation = 1;
  repeated string argument = 2;
  repeated string result = 3;
  repeated Attribute attribute = 4;
}

// The file will contain only one top level graph to represent
// the model. All subgraphs will be nested within the top
// level graph.
message Graph {
  string name = 1;
  string op_type = 2;
  repeated Tensor input = 3; // required for built-ins 
  repeated Tensor output = 4; // required for built-ins
  repeated Tensor intermediate = 5;
  repeated Graph subgraph = 6;
  repeated Dependency dependency = 7;
  string device = 8;  // place holder for HW model entities
  string metadata = 15; // meta data used for transformation, ignored for execution, packed into a single string
}
